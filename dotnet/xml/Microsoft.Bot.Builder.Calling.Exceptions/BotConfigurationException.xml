<Type Name="BotConfigurationException" FullName="Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException">
  <TypeSignature Language="C#" Value="public class BotConfigurationException : Microsoft.Bot.Builder.Calling.Exceptions.BotException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BotConfigurationException extends Microsoft.Bot.Builder.Calling.Exceptions.BotException" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException" />
  <TypeSignature Language="VB.NET" Value="Public Class BotConfigurationException&#xA;Inherits BotException" />
  <TypeSignature Language="F#" Value="type BotConfigurationException = class&#xA;    inherit BotException" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Calling.Exceptions.BotException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Exception type thrown when the bot configuration is invalid
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotConfigurationException (string message, string itemName = null, string itemValue = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string itemName, string itemValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, Optional itemName As String = null, Optional itemValue As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException : string * string * string -&gt; Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException" Usage="new Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException (message, itemName, itemValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="itemName" Type="System.String" />
        <Parameter Name="itemValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">exception message</param>
        <param name="itemName">relevant configuration item name</param>
        <param name="itemValue">relevant configuration item value</param>
        <summary>
                creates a new BotConfigurationException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotConfigurationException (string message, Exception innerException, string itemName = null, string itemValue = null, bool extendForInternalExceptionRemark = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, string itemName, string itemValue, bool extendForInternalExceptionRemark) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.#ctor(System.String,System.Exception,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, Optional itemName As String = null, Optional itemValue As String = null, Optional extendForInternalExceptionRemark As Boolean = true)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException : string * Exception * string * string * bool -&gt; Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException" Usage="new Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException (message, innerException, itemName, itemValue, extendForInternalExceptionRemark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="itemName" Type="System.String" />
        <Parameter Name="itemValue" Type="System.String" />
        <Parameter Name="extendForInternalExceptionRemark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">exception message</param>
        <param name="innerException">wrapped exception</param>
        <param name="itemName">relevant configuration item name</param>
        <param name="itemValue">relevant configuration item value</param>
        <param name="extendForInternalExceptionRemark">
                if true, message is extended with internal exception message and remark
                to check it
            </param>
        <summary>
                wraps an exception into the BotConfigurationException
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationItemName">
      <MemberSignature Language="C#" Value="public string ConfigurationItemName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationItemName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.ConfigurationItemName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationItemName As String" />
      <MemberSignature Language="F#" Value="member this.ConfigurationItemName : string" Usage="Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.ConfigurationItemName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                identifier of the configuration item which caused the failure (may stay null in case of global failures)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationItemValue">
      <MemberSignature Language="C#" Value="public string ConfigurationItemValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationItemValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.ConfigurationItemValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationItemValue As String" />
      <MemberSignature Language="F#" Value="member this.ConfigurationItemValue : string" Usage="Microsoft.Bot.Builder.Calling.Exceptions.BotConfigurationException.ConfigurationItemValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                value of the configuration item which caused the exception
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>