<Type Name="ConversationResult" FullName="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult">
  <TypeSignature Language="C#" Value="public class ConversationResult : Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConversationResult extends Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ConversationResult&#xA;Inherits ConversationBase" />
  <TypeSignature Language="F#" Value="type ConversationResult = class&#xA;    inherit ConversationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptOut)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Once we have peformed the "actions" requested by the customer, we POST back to customer callback Url with this "result" object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConversationResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallState">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Calling.ObjectModel.Misc.CallState CallState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Bot.Builder.Calling.ObjectModel.Misc.CallState CallState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.CallState" />
      <MemberSignature Language="VB.NET" Value="Public Property CallState As CallState" />
      <MemberSignature Language="F#" Value="member this.CallState : Microsoft.Bot.Builder.Calling.ObjectModel.Misc.CallState with get, set" Usage="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.CallState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(Required=Newtonsoft.Json.Required.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Calling.ObjectModel.Misc.CallState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Current state of the Call
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationOutcome">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.OperationOutcomeBase OperationOutcome { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.OperationOutcomeBase OperationOutcome" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.OperationOutcome" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationOutcome As OperationOutcomeBase" />
      <MemberSignature Language="F#" Value="member this.OperationOutcome : Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.OperationOutcomeBase with get, set" Usage="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.OperationOutcome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(Required=Newtonsoft.Json.Required.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.OperationOutcomeBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            a. We would always return the outcome :
                i. of the last operation if all operations were performed successfully OR
                ii. outcome of first failed operation 
            b. If any operation fails, then we immediately callback the customer webservice with the outcome, 
                and skip processing other operations defined in the "actions" list. 
            c. If no callback link is provided, then we keep performing all specified operations, until 
                i. we hit the end - then we hangup (if call connected to server call agent)
                ii. We hit a failure - then we hangup (if call connected to server call agent)
                iii. We hit a max call duration timeout - then we hangup (if call connected to server call agent)
            d. Any validation failure of this response object would result in us returning
               the WorkflowValidationOutcome object to the customer's callback url and not proceed with any defined actions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ConversationResult.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate ()" />
      <MemberSignature Language="F#" Value="override this.Validate : unit -&gt; unit" Usage="conversationResult.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>