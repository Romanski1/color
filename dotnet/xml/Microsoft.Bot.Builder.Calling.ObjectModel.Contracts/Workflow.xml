<Type Name="Workflow" FullName="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow">
  <TypeSignature Language="C#" Value="public class Workflow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Workflow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow" />
  <TypeSignature Language="VB.NET" Value="Public Class Workflow" />
  <TypeSignature Language="F#" Value="type Workflow = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptOut)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This class contains the workflow the customer sent for the OnInComingCall POST or any subsequent POST to their callback url.
            Basically this workflow defines the set of actions, the customer wants us to perform and then callback to them.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ActionBase&gt; Actions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ActionBase&gt; Actions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Actions" />
      <MemberSignature Language="VB.NET" Value="Public Property Actions As IEnumerable(Of ActionBase)" />
      <MemberSignature Language="F#" Value="member this.Actions : seq&lt;Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ActionBase&gt; with get, set" Usage="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(Required=Newtonsoft.Json.Required.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.ActionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of actions to perform . ex : playPrompt, record, hangup
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppState">
      <MemberSignature Language="C#" Value="public string AppState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.AppState" />
      <MemberSignature Language="VB.NET" Value="Public Property AppState As String" />
      <MemberSignature Language="F#" Value="member this.AppState : string with get, set" Usage="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.AppState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(Required=Newtonsoft.Json.Required.Default)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Opaque string to facilitate app developers to pass their custom data in this field. 
            This field is echo'd back in the 'result' POST for this 'workflow'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.CallbackLink Links { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.CallbackLink Links" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Links" />
      <MemberSignature Language="VB.NET" Value="Public Property Links As CallbackLink" />
      <MemberSignature Language="F#" Value="member this.Links : Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.CallbackLink with get, set" Usage="Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(Required=Newtonsoft.Json.Required.Default)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.CallbackLink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Callback link to call back the customer on, once we have performed the set of actions.
            
            Note : 
            a. We would always return the outcome :
                i. of the last operation if all operations were performed successfully OR
                ii. outcome of first failed operation 
            b. If any operation fails, then we immediately callback the customer webservice with the outcome, 
                and skip processing other operations defined in the "actions" list. 
            c. If no callback link is provided, then we keep performing all specified operations, until 
                i. we hit the end - then we hangup (if call connected to server call agent)
                ii. We hit a failure - then we hangup (if call connected to server call agent)
                iii. We hit a max call duration timeout - then we hangup (if call connected to server call agent)
            d. Any validation failure of this workflow object would result in us returning
               the workflowValidationOutcome object to the customer's callback url and not proceed with any defined actions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate ()" />
      <MemberSignature Language="F#" Value="member this.Validate : unit -&gt; unit" Usage="workflow.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validate the WorkFlow
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (bool expectEmptyActions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(bool expectEmptyActions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Calling.ObjectModel.Contracts.Workflow.Validate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (expectEmptyActions As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Validate : bool -&gt; unit&#xA;override this.Validate : bool -&gt; unit" Usage="workflow.Validate expectEmptyActions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Calling</AssemblyName>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectEmptyActions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="expectEmptyActions">Allow Actions to be empty</param>
        <summary>
            Validate the WorkFlow
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>