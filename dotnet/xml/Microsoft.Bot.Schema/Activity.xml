<Type Name="Activity" FullName="Microsoft.Bot.Schema.Activity">
  <TypeSignature Language="C#" Value="public class Activity : Microsoft.Bot.Schema.IContactRelationUpdateActivity, Microsoft.Bot.Schema.IConversationUpdateActivity, Microsoft.Bot.Schema.IEndOfConversationActivity, Microsoft.Bot.Schema.IEventActivity, Microsoft.Bot.Schema.IHandoffActivity, Microsoft.Bot.Schema.IInstallationUpdateActivity, Microsoft.Bot.Schema.IInvokeActivity, Microsoft.Bot.Schema.IMessageDeleteActivity, Microsoft.Bot.Schema.IMessageReactionActivity, Microsoft.Bot.Schema.IMessageUpdateActivity, Microsoft.Bot.Schema.ISuggestionActivity, Microsoft.Bot.Schema.ITraceActivity, Microsoft.Bot.Schema.ITypingActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Activity extends System.Object implements class Microsoft.Bot.Schema.IActivity, class Microsoft.Bot.Schema.IContactRelationUpdateActivity, class Microsoft.Bot.Schema.IConversationUpdateActivity, class Microsoft.Bot.Schema.IEndOfConversationActivity, class Microsoft.Bot.Schema.IEventActivity, class Microsoft.Bot.Schema.IHandoffActivity, class Microsoft.Bot.Schema.IInstallationUpdateActivity, class Microsoft.Bot.Schema.IInvokeActivity, class Microsoft.Bot.Schema.IMessageActivity, class Microsoft.Bot.Schema.IMessageDeleteActivity, class Microsoft.Bot.Schema.IMessageReactionActivity, class Microsoft.Bot.Schema.IMessageUpdateActivity, class Microsoft.Bot.Schema.ISuggestionActivity, class Microsoft.Bot.Schema.ITraceActivity, class Microsoft.Bot.Schema.ITypingActivity" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Schema.Activity" />
  <TypeSignature Language="VB.NET" Value="Public Class Activity&#xA;Implements IContactRelationUpdateActivity, IConversationUpdateActivity, IEndOfConversationActivity, IEventActivity, IHandoffActivity, IInstallationUpdateActivity, IInvokeActivity, IMessageDeleteActivity, IMessageReactionActivity, IMessageUpdateActivity, ISuggestionActivity, ITraceActivity, ITypingActivity" />
  <TypeSignature Language="F#" Value="type Activity = class&#xA;    interface IActivity&#xA;    interface IConversationUpdateActivity&#xA;    interface IContactRelationUpdateActivity&#xA;    interface IInstallationUpdateActivity&#xA;    interface IMessageActivity&#xA;    interface IMessageUpdateActivity&#xA;    interface IMessageDeleteActivity&#xA;    interface IMessageReactionActivity&#xA;    interface ISuggestionActivity&#xA;    interface ITypingActivity&#xA;    interface IEndOfConversationActivity&#xA;    interface IEventActivity&#xA;    interface IInvokeActivity&#xA;    interface ITraceActivity&#xA;    interface IHandoffActivity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
    <AssemblyVersion>4.0.7.0</AssemblyVersion>
    <AssemblyVersion>4.1.5.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IContactRelationUpdateActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IConversationUpdateActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IEndOfConversationActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IHandoffActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IInstallationUpdateActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IInvokeActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IMessageActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IMessageDeleteActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IMessageReactionActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.IMessageUpdateActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.ISuggestionActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.ITraceActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Bot.Schema.ITypingActivity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An Activity is the basic communication type for the Bot Framework 3.0
            protocol.
            </summary>
    <remarks>
            The Activity class contains all properties that individual, more specific activities
            could contain. It is a superset type.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the Activity class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (string type = null, string id = null, Nullable&lt;DateTimeOffset&gt; timestamp = null, Nullable&lt;DateTimeOffset&gt; localTimestamp = null, string serviceUrl = null, string channelId = null, Microsoft.Bot.Schema.ChannelAccount from = null, Microsoft.Bot.Schema.ConversationAccount conversation = null, Microsoft.Bot.Schema.ChannelAccount recipient = null, string textFormat = null, string attachmentLayout = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; reactionsAdded = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; reactionsRemoved = null, string topicName = null, Nullable&lt;bool&gt; historyDisclosed = null, string locale = null, string text = null, string speak = null, string inputHint = null, string summary = null, Microsoft.Bot.Schema.SuggestedActions suggestedActions = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt; attachments = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt; entities = null, object channelData = null, string action = null, string replyToId = null, string label = null, string valueType = null, object value = null, string name = null, Microsoft.Bot.Schema.ConversationReference relatesTo = null, string code = null, Nullable&lt;DateTimeOffset&gt; expiration = null, string importance = null, string deliveryMode = null, System.Collections.Generic.IList&lt;string&gt; listenFor = null, System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt; textHighlights = null, Microsoft.Bot.Schema.SemanticAction semanticAction = null, string localTimezone = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string id, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; timestamp, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; localTimestamp, string serviceUrl, string channelId, class Microsoft.Bot.Schema.ChannelAccount from, class Microsoft.Bot.Schema.ConversationAccount conversation, class Microsoft.Bot.Schema.ChannelAccount recipient, string textFormat, string attachmentLayout, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; reactionsAdded, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; reactionsRemoved, string topicName, valuetype System.Nullable`1&lt;bool&gt; historyDisclosed, string locale, string text, string speak, string inputHint, string summary, class Microsoft.Bot.Schema.SuggestedActions suggestedActions, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Attachment&gt; attachments, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Entity&gt; entities, object channelData, string action, string replyToId, string label, string valueType, object value, string name, class Microsoft.Bot.Schema.ConversationReference relatesTo, string code, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; expiration, string importance, string deliveryMode, class System.Collections.Generic.IList`1&lt;string&gt; listenFor, class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.TextHighlight&gt; textHighlights, class Microsoft.Bot.Schema.SemanticAction semanticAction, string localTimezone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.#ctor(System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Microsoft.Bot.Schema.ChannelAccount,Microsoft.Bot.Schema.ConversationAccount,Microsoft.Bot.Schema.ChannelAccount,System.String,System.String,System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,Microsoft.Bot.Schema.SuggestedActions,System.Collections.Generic.IList{Microsoft.Bot.Schema.Attachment},System.Collections.Generic.IList{Microsoft.Bot.Schema.Entity},System.Object,System.String,System.String,System.String,System.String,System.Object,System.String,Microsoft.Bot.Schema.ConversationReference,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Bot.Schema.TextHighlight},Microsoft.Bot.Schema.SemanticAction,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Schema.Activity : string * string * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * string * string * Microsoft.Bot.Schema.ChannelAccount * Microsoft.Bot.Schema.ConversationAccount * Microsoft.Bot.Schema.ChannelAccount * string * string * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * string * Nullable&lt;bool&gt; * string * string * string * string * string * Microsoft.Bot.Schema.SuggestedActions * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt; * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt; * obj * string * string * string * string * obj * string * Microsoft.Bot.Schema.ConversationReference * string * Nullable&lt;DateTimeOffset&gt; * string * string * System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt; * Microsoft.Bot.Schema.SemanticAction * string -&gt; Microsoft.Bot.Schema.Activity" Usage="new Microsoft.Bot.Schema.Activity (type, id, timestamp, localTimestamp, serviceUrl, channelId, from, conversation, recipient, textFormat, attachmentLayout, membersAdded, membersRemoved, reactionsAdded, reactionsRemoved, topicName, historyDisclosed, locale, text, speak, inputHint, summary, suggestedActions, attachments, entities, channelData, action, replyToId, label, valueType, value, name, relatesTo, code, expiration, importance, deliveryMode, listenFor, textHighlights, semanticAction, localTimezone)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="localTimestamp" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="from" Type="Microsoft.Bot.Schema.ChannelAccount" />
        <Parameter Name="conversation" Type="Microsoft.Bot.Schema.ConversationAccount" />
        <Parameter Name="recipient" Type="Microsoft.Bot.Schema.ChannelAccount" />
        <Parameter Name="textFormat" Type="System.String" />
        <Parameter Name="attachmentLayout" Type="System.String" />
        <Parameter Name="membersAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="membersRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="reactionsAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="reactionsRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="topicName" Type="System.String" />
        <Parameter Name="historyDisclosed" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="locale" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="speak" Type="System.String" />
        <Parameter Name="inputHint" Type="System.String" />
        <Parameter Name="summary" Type="System.String" />
        <Parameter Name="suggestedActions" Type="Microsoft.Bot.Schema.SuggestedActions" />
        <Parameter Name="attachments" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt;" />
        <Parameter Name="entities" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt;" />
        <Parameter Name="channelData" Type="System.Object" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="replyToId" Type="System.String" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="relatesTo" Type="Microsoft.Bot.Schema.ConversationReference" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="expiration" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="importance" Type="System.String" />
        <Parameter Name="deliveryMode" Type="System.String" />
        <Parameter Name="listenFor" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="textHighlights" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt;" />
        <Parameter Name="semanticAction" Type="Microsoft.Bot.Schema.SemanticAction" />
        <Parameter Name="localTimezone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Contains the activity type. Possible values
            include: 'message', 'contactRelationUpdate', 'conversationUpdate',
            'typing', 'endOfConversation', 'event', 'invoke', 'deleteUserData',
            'messageUpdate', 'messageDelete', 'installationUpdate',
            'messageReaction', 'suggestion', 'trace', 'handoff'</param>
        <param name="id">Contains an ID that uniquely identifies the
            activity on the channel.</param>
        <param name="timestamp">Contains the date and time that the message
            was sent, in UTC, expressed in ISO-8601 format.</param>
        <param name="localTimestamp">Contains the date and time that the
            message was sent, in local time, expressed in ISO-8601 format.
            For example, 2016-09-23T13:07:49.4714686-07:00.</param>
        <param name="serviceUrl">Contains the URL that specifies the
            channel's service endpoint. Set by the channel.</param>
        <param name="channelId">Contains an ID that uniquely identifies the
            channel. Set by the channel.</param>
        <param name="from">Identifies the sender of the
            message.</param>
        <param name="conversation">Identifies the conversation to which the
            activity belongs.</param>
        <param name="recipient">Identifies the recipient of the
            message.</param>
        <param name="textFormat">Format of text fields Default:markdown.
            Possible values include: 'markdown', 'plain', 'xml'</param>
        <param name="attachmentLayout">The layout hint for multiple
            attachments. Default: list. Possible values include: 'list',
            'carousel'</param>
        <param name="membersAdded">The collection of members added to the
            conversation.</param>
        <param name="membersRemoved">The collection of members removed from
            the conversation.</param>
        <param name="reactionsAdded">The collection of reactions added to
            the conversation.</param>
        <param name="reactionsRemoved">The collection of reactions removed
            from the conversation.</param>
        <param name="topicName">The updated topic name of the
            conversation.</param>
        <param name="historyDisclosed">Indicates whether the prior history
            of the channel is disclosed.</param>
        <param name="locale">A locale name for the contents of the text
            field.
            The locale name is a combination of an ISO 639 two- or three-letter
            culture code associated with a language
            and an ISO 3166 two-letter subculture code associated with a
            country or region.
            The locale name can also correspond to a valid BCP-47 language
            tag.</param>
        <param name="text">The text content of the message.</param>
        <param name="speak">The text to speak.</param>
        <param name="inputHint">Indicates whether your bot is accepting,
            expecting, or ignoring user input after the message is delivered to
            the client. Possible values include: 'acceptingInput',
            'ignoringInput', 'expectingInput'</param>
        <param name="summary">The text to display if the channel cannot
            render cards.</param>
        <param name="suggestedActions">The suggested actions for the
            activity.</param>
        <param name="attachments">Attachments</param>
        <param name="entities">Represents the entities that were mentioned
            in the message.</param>
        <param name="channelData">Contains channel-specific
            content.</param>
        <param name="action">Indicates whether the recipient of a
            contactRelationUpdate was added or removed from the sender's
            contact list.</param>
        <param name="replyToId">Contains the ID of the message to which
            this message is a reply.</param>
        <param name="label">A descriptive label for the activity.</param>
        <param name="valueType">The type of the activity's value
            object.</param>
        <param name="value">A value that is associated with the
            activity.</param>
        <param name="name">The name of the operation associated with an
            invoke or event activity.</param>
        <param name="relatesTo">A reference to another conversation or
            activity.</param>
        <param name="code">The a code for endOfConversation activities that
            indicates why the conversation ended. Possible values include:
            'unknown', 'completedSuccessfully', 'userCancelled', 'botTimedOut',
            'botIssuedInvalidMessage', 'channelFailed'</param>
        <param name="expiration">The time at which the activity should be
            considered to be "expired" and should not be presented to the
            recipient.</param>
        <param name="importance">The importance of the activity. Possible
            values include: 'low', 'normal', 'high'</param>
        <param name="deliveryMode">A delivery hint to signal to the
            recipient alternate delivery paths for the activity.
            The default delivery mode is "default". Possible values include:
            'normal', 'notification'</param>
        <param name="listenFor">List of phrases and references that speech
            and language priming systems should listen for</param>
        <param name="textHighlights">The collection of text fragments to
            highlight when the activity contains a ReplyToId value.</param>
        <param name="semanticAction">An optional programmatic action
            accompanying this request</param>
        <param name="localTimezone">Contains the name of the timezone in
            which the message, in local time, expressed in IANA Time Zone
            database format.
            For example, America/Los_Angeles.</param>
        <summary>
            Initializes a new instance of the Activity class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Action" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IContactRelationUpdateActivity.Action</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IInstallationUpdateActivity.Action</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates whether the recipient of a
            contactRelationUpdate was added or removed from the sender's
            contact list.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConversationReference">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.Activity ApplyConversationReference (Microsoft.Bot.Schema.ConversationReference reference, bool isIncoming = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.Activity ApplyConversationReference(class Microsoft.Bot.Schema.ConversationReference reference, bool isIncoming) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.ApplyConversationReference(Microsoft.Bot.Schema.ConversationReference,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyConversationReference (reference As ConversationReference, Optional isIncoming As Boolean = false) As Activity" />
      <MemberSignature Language="F#" Value="abstract member ApplyConversationReference : Microsoft.Bot.Schema.ConversationReference * bool -&gt; Microsoft.Bot.Schema.Activity&#xA;override this.ApplyConversationReference : Microsoft.Bot.Schema.ConversationReference * bool -&gt; Microsoft.Bot.Schema.Activity" Usage="activity.ApplyConversationReference (reference, isIncoming)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.ApplyConversationReference(Microsoft.Bot.Schema.ConversationReference,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.Bot.Schema.ConversationReference" />
        <Parameter Name="isIncoming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reference">The conversation reference.</param>
        <param name="isIncoming">(Optional) <c>true</c> to treat the activity as an 
            incoming activity, where the bot is the recipient; otherwaire <c>false</c>.
            Default is <c>false</c>, and the activity will show the bot as the sender.</param>
        <summary>
            Updates this activity with the delivery information from an existing 
            conversation reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>Call <see cref="M:Microsoft.Bot.Schema.Activity.GetConversationReference" /> on an incoming
            activity to get a conversation reference that you can then use to update an
            outgoing activity with the correct delivery information.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsContactRelationUpdateActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IContactRelationUpdateActivity AsContactRelationUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IContactRelationUpdateActivity AsContactRelationUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsContactRelationUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsContactRelationUpdateActivity () As IContactRelationUpdateActivity" />
      <MemberSignature Language="F#" Value="abstract member AsContactRelationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IContactRelationUpdateActivity&#xA;override this.AsContactRelationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IContactRelationUpdateActivity" Usage="activity.AsContactRelationUpdateActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsContactRelationUpdateActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IContactRelationUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a contact relation update activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsConversationUpdateActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IConversationUpdateActivity AsConversationUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IConversationUpdateActivity AsConversationUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsConversationUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsConversationUpdateActivity () As IConversationUpdateActivity" />
      <MemberSignature Language="F#" Value="abstract member AsConversationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IConversationUpdateActivity&#xA;override this.AsConversationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IConversationUpdateActivity" Usage="activity.AsConversationUpdateActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsConversationUpdateActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IConversationUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a conversation update activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEndOfConversationActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IEndOfConversationActivity AsEndOfConversationActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IEndOfConversationActivity AsEndOfConversationActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsEndOfConversationActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsEndOfConversationActivity () As IEndOfConversationActivity" />
      <MemberSignature Language="F#" Value="abstract member AsEndOfConversationActivity : unit -&gt; Microsoft.Bot.Schema.IEndOfConversationActivity&#xA;override this.AsEndOfConversationActivity : unit -&gt; Microsoft.Bot.Schema.IEndOfConversationActivity" Usage="activity.AsEndOfConversationActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsEndOfConversationActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IEndOfConversationActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as an end of conversation activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEventActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IEventActivity AsEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IEventActivity AsEventActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsEventActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsEventActivity () As IEventActivity" />
      <MemberSignature Language="F#" Value="abstract member AsEventActivity : unit -&gt; Microsoft.Bot.Schema.IEventActivity&#xA;override this.AsEventActivity : unit -&gt; Microsoft.Bot.Schema.IEventActivity" Usage="activity.AsEventActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsEventActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IEventActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as an event activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsHandoffActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IHandoffActivity AsHandoffActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.IHandoffActivity AsHandoffActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsHandoffActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsHandoffActivity () As IHandoffActivity" />
      <MemberSignature Language="F#" Value="member this.AsHandoffActivity : unit -&gt; Microsoft.Bot.Schema.IHandoffActivity" Usage="activity.AsHandoffActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IHandoffActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a handoff activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsInstallationUpdateActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IInstallationUpdateActivity AsInstallationUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IInstallationUpdateActivity AsInstallationUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsInstallationUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsInstallationUpdateActivity () As IInstallationUpdateActivity" />
      <MemberSignature Language="F#" Value="abstract member AsInstallationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IInstallationUpdateActivity&#xA;override this.AsInstallationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IInstallationUpdateActivity" Usage="activity.AsInstallationUpdateActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsInstallationUpdateActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IInstallationUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as an installation update activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsInvokeActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IInvokeActivity AsInvokeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IInvokeActivity AsInvokeActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsInvokeActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsInvokeActivity () As IInvokeActivity" />
      <MemberSignature Language="F#" Value="abstract member AsInvokeActivity : unit -&gt; Microsoft.Bot.Schema.IInvokeActivity&#xA;override this.AsInvokeActivity : unit -&gt; Microsoft.Bot.Schema.IInvokeActivity" Usage="activity.AsInvokeActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsInvokeActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IInvokeActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as an invoke activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMessageActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IMessageActivity AsMessageActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IMessageActivity AsMessageActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsMessageActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMessageActivity () As IMessageActivity" />
      <MemberSignature Language="F#" Value="abstract member AsMessageActivity : unit -&gt; Microsoft.Bot.Schema.IMessageActivity&#xA;override this.AsMessageActivity : unit -&gt; Microsoft.Bot.Schema.IMessageActivity" Usage="activity.AsMessageActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsMessageActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a message activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMessageDeleteActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IMessageDeleteActivity AsMessageDeleteActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IMessageDeleteActivity AsMessageDeleteActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsMessageDeleteActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMessageDeleteActivity () As IMessageDeleteActivity" />
      <MemberSignature Language="F#" Value="abstract member AsMessageDeleteActivity : unit -&gt; Microsoft.Bot.Schema.IMessageDeleteActivity&#xA;override this.AsMessageDeleteActivity : unit -&gt; Microsoft.Bot.Schema.IMessageDeleteActivity" Usage="activity.AsMessageDeleteActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsMessageDeleteActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageDeleteActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a message delete activty type; or null, if this is not that type of activity.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMessageReactionActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IMessageReactionActivity AsMessageReactionActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IMessageReactionActivity AsMessageReactionActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsMessageReactionActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMessageReactionActivity () As IMessageReactionActivity" />
      <MemberSignature Language="F#" Value="abstract member AsMessageReactionActivity : unit -&gt; Microsoft.Bot.Schema.IMessageReactionActivity&#xA;override this.AsMessageReactionActivity : unit -&gt; Microsoft.Bot.Schema.IMessageReactionActivity" Usage="activity.AsMessageReactionActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsMessageReactionActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageReactionActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a message reaction activty type; or null, if this is not that type of activity.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsMessageUpdateActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.IMessageUpdateActivity AsMessageUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.IMessageUpdateActivity AsMessageUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsMessageUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsMessageUpdateActivity () As IMessageUpdateActivity" />
      <MemberSignature Language="F#" Value="abstract member AsMessageUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IMessageUpdateActivity&#xA;override this.AsMessageUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IMessageUpdateActivity" Usage="activity.AsMessageUpdateActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsMessageUpdateActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a message update activty type; or null, if this is not that type of activity.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSuggestionActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ISuggestionActivity AsSuggestionActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.ISuggestionActivity AsSuggestionActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsSuggestionActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsSuggestionActivity () As ISuggestionActivity" />
      <MemberSignature Language="F#" Value="abstract member AsSuggestionActivity : unit -&gt; Microsoft.Bot.Schema.ISuggestionActivity&#xA;override this.AsSuggestionActivity : unit -&gt; Microsoft.Bot.Schema.ISuggestionActivity" Usage="activity.AsSuggestionActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsSuggestionActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ISuggestionActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a suggestion activty type; or null, if this is not that type of activity.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTraceActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ITraceActivity AsTraceActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.ITraceActivity AsTraceActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsTraceActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTraceActivity () As ITraceActivity" />
      <MemberSignature Language="F#" Value="member this.AsTraceActivity : unit -&gt; Microsoft.Bot.Schema.ITraceActivity" Usage="activity.AsTraceActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ITraceActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a trace activty type; or null, if this is not that type of activity.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTypingActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ITypingActivity AsTypingActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.ITypingActivity AsTypingActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.AsTypingActivity" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTypingActivity () As ITypingActivity" />
      <MemberSignature Language="F#" Value="abstract member AsTypingActivity : unit -&gt; Microsoft.Bot.Schema.ITypingActivity&#xA;override this.AsTypingActivity : unit -&gt; Microsoft.Bot.Schema.ITypingActivity" Usage="activity.AsTypingActivity " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.AsTypingActivity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ITypingActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns this activity as a typing activty type; or null, if this is not that type of activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachmentLayout">
      <MemberSignature Language="C#" Value="public string AttachmentLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttachmentLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.AttachmentLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachmentLayout As String" />
      <MemberSignature Language="F#" Value="member this.AttachmentLayout : string with get, set" Usage="Microsoft.Bot.Schema.Activity.AttachmentLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.AttachmentLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="attachmentLayout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the layout hint for multiple attachments. Default:
            list. Possible values include: 'list', 'carousel'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt; Attachments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Attachment&gt; Attachments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public Property Attachments As IList(Of Attachment)" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.Attachments" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Attachments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="attachments")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Attachment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets attachments
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelData As Object" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj with get, set" Usage="Microsoft.Bot.Schema.Activity.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="channelData")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains channel-specific content.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelId">
      <MemberSignature Language="C#" Value="public string ChannelId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ChannelId" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelId As String" />
      <MemberSignature Language="F#" Value="member this.ChannelId : string with get, set" Usage="Microsoft.Bot.Schema.Activity.ChannelId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.ChannelId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="channelId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains an ID that uniquely identifies the channel.
            Set by the channel.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public string Code { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Code" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Code" />
      <MemberSignature Language="VB.NET" Value="Public Property Code As String" />
      <MemberSignature Language="F#" Value="member this.Code : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Code" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IEndOfConversationActivity.Code</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="code")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the a code for endOfConversation activities that
            indicates why the conversation ended. Possible values include:
            'unknown', 'completedSuccessfully', 'userCancelled', 'botTimedOut',
            'botIssuedInvalidMessage', 'channelFailed'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public const string ContentType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ContentType" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Schema.Activity.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Const ContentType As String " />
      <MemberSignature Language="F#" Value="val mutable ContentType : string" Usage="Microsoft.Bot.Schema.Activity.ContentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Content-type for an <see cref="T:Microsoft.Bot.Schema.Activity" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conversation">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ConversationAccount Conversation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.ConversationAccount Conversation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Conversation" />
      <MemberSignature Language="VB.NET" Value="Public Property Conversation As ConversationAccount" />
      <MemberSignature Language="F#" Value="member this.Conversation : Microsoft.Bot.Schema.ConversationAccount with get, set" Usage="Microsoft.Bot.Schema.Activity.Conversation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Conversation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="conversation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ConversationAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets identifies the conversation to which the activity
            belongs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContactRelationUpdateActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IContactRelationUpdateActivity CreateContactRelationUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IContactRelationUpdateActivity CreateContactRelationUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateContactRelationUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateContactRelationUpdateActivity () As IContactRelationUpdateActivity" />
      <MemberSignature Language="F#" Value="static member CreateContactRelationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IContactRelationUpdateActivity" Usage="Microsoft.Bot.Schema.Activity.CreateContactRelationUpdateActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IContactRelationUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create an instance of the Activity class with IContactRelationUpdateActivity masking
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConversationUpdateActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IConversationUpdateActivity CreateConversationUpdateActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IConversationUpdateActivity CreateConversationUpdateActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateConversationUpdateActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateConversationUpdateActivity () As IConversationUpdateActivity" />
      <MemberSignature Language="F#" Value="static member CreateConversationUpdateActivity : unit -&gt; Microsoft.Bot.Schema.IConversationUpdateActivity" Usage="Microsoft.Bot.Schema.Activity.CreateConversationUpdateActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IConversationUpdateActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a conversation update activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEndOfConversationActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IEndOfConversationActivity CreateEndOfConversationActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IEndOfConversationActivity CreateEndOfConversationActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateEndOfConversationActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEndOfConversationActivity () As IEndOfConversationActivity" />
      <MemberSignature Language="F#" Value="static member CreateEndOfConversationActivity : unit -&gt; Microsoft.Bot.Schema.IEndOfConversationActivity" Usage="Microsoft.Bot.Schema.Activity.CreateEndOfConversationActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IEndOfConversationActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an end of conversation activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEventActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IEventActivity CreateEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IEventActivity CreateEventActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateEventActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEventActivity () As IEventActivity" />
      <MemberSignature Language="F#" Value="static member CreateEventActivity : unit -&gt; Microsoft.Bot.Schema.IEventActivity" Usage="Microsoft.Bot.Schema.Activity.CreateEventActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IEventActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an event activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandoffActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IHandoffActivity CreateHandoffActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IHandoffActivity CreateHandoffActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateHandoffActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHandoffActivity () As IHandoffActivity" />
      <MemberSignature Language="F#" Value="static member CreateHandoffActivity : unit -&gt; Microsoft.Bot.Schema.IHandoffActivity" Usage="Microsoft.Bot.Schema.Activity.CreateHandoffActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IHandoffActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a Handoff activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInvokeActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IInvokeActivity CreateInvokeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IInvokeActivity CreateInvokeActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateInvokeActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInvokeActivity () As IInvokeActivity" />
      <MemberSignature Language="F#" Value="static member CreateInvokeActivity : unit -&gt; Microsoft.Bot.Schema.IInvokeActivity" Usage="Microsoft.Bot.Schema.Activity.CreateInvokeActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IInvokeActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an invoke activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.IMessageActivity CreateMessageActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.IMessageActivity CreateMessageActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateMessageActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessageActivity () As IMessageActivity" />
      <MemberSignature Language="F#" Value="static member CreateMessageActivity : unit -&gt; Microsoft.Bot.Schema.IMessageActivity" Usage="Microsoft.Bot.Schema.Activity.CreateMessageActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.IMessageActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create an instance of the Activity class with IMessageActivity masking
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateReply">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.Activity CreateReply (string text = null, string locale = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.Activity CreateReply(string text, string locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateReply(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReply (Optional text As String = null, Optional locale As String = null) As Activity" />
      <MemberSignature Language="F#" Value="member this.CreateReply : string * string -&gt; Microsoft.Bot.Schema.Activity" Usage="activity.CreateReply (text, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="locale" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text of the reply.</param>
        <param name="locale">The language code for the <paramref name="text" />.</param>
        <summary>
            Creates a reply message to this message and set up the routing information 
            as a reply to the source message.
            </summary>
        <returns>A message activity set up to route back to the sender.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTrace">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ITraceActivity CreateTrace (string name, object value = null, string valueType = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.ITraceActivity CreateTrace(string name, object value, string valueType, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateTrace(System.String,System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTrace (name As String, Optional value As Object = null, Optional valueType As String = null, Optional label As String = null) As ITraceActivity" />
      <MemberSignature Language="F#" Value="member this.CreateTrace : string * obj * string * string -&gt; Microsoft.Bot.Schema.ITraceActivity" Usage="activity.CreateTrace (name, value, valueType, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ITraceActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueType" Type="System.String" />
        <Parameter Name="label" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the trace activity's <see cref="P:Microsoft.Bot.Schema.Activity.Name" /> property.</param>
        <param name="value">The value to assign to the trace activity's <see cref="P:Microsoft.Bot.Schema.Activity.Value" /> property.</param>
        <param name="valueType">The value to assign to the trace activity's <see cref="P:Microsoft.Bot.Schema.Activity.ValueType" /> property.</param>
        <param name="label">The value to assign to the trace activity's <see cref="P:Microsoft.Bot.Schema.Activity.Label" /> property.</param>
        <summary>
            Creates a trace activity based on this activity.
            </summary>
        <returns>The created trace activity.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTraceActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.ITraceActivity CreateTraceActivity (string name, string valueType = null, object value = null, string label = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.ITraceActivity CreateTraceActivity(string name, string valueType, object value, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateTraceActivity(System.String,System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTraceActivity (name As String, Optional valueType As String = null, Optional value As Object = null, Optional label As String = null) As ITraceActivity" />
      <MemberSignature Language="F#" Value="static member CreateTraceActivity : string * string * obj * string -&gt; Microsoft.Bot.Schema.ITraceActivity" Usage="Microsoft.Bot.Schema.Activity.CreateTraceActivity (name, valueType, value, label)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ITraceActivity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="valueType" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="label" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The value to assign to the new activity's <see cref="P:Microsoft.Bot.Schema.Activity.Name" /> property.</param>
        <param name="valueType">The value to assign to the new activity's <see cref="P:Microsoft.Bot.Schema.Activity.ValueType" /> property.
            Default is the type name of the <paramref name="value" /> parameter.</param>
        <param name="value">The value to assign to the new activity's <see cref="P:Microsoft.Bot.Schema.Activity.Value" /> property.</param>
        <param name="label">The value to assign to the new activity's <see cref="P:Microsoft.Bot.Schema.Activity.Label" /> property.</param>
        <summary>
            Creates a trace activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTypingActivity">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Schema.ITypingActivity CreateTypingActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Schema.ITypingActivity CreateTypingActivity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.CreateTypingActivity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTypingActivity () As ITypingActivity" />
      <MemberSignature Language="F#" Value="static member CreateTypingActivity : unit -&gt; Microsoft.Bot.Schema.ITypingActivity" Usage="Microsoft.Bot.Schema.Activity.CreateTypingActivity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ITypingActivity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a typing activity.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliveryMode">
      <MemberSignature Language="C#" Value="public string DeliveryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeliveryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.DeliveryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryMode As String" />
      <MemberSignature Language="F#" Value="member this.DeliveryMode : string with get, set" Usage="Microsoft.Bot.Schema.Activity.DeliveryMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.DeliveryMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="deliveryMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a delivery hint to signal to the recipient alternate
            delivery paths for the activity.
            The default delivery mode is "default". Possible values include:
            'normal', 'notification'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt; Entities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Entity&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Entities" />
      <MemberSignature Language="VB.NET" Value="Public Property Entities As IList(Of Entity)" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.Entities" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Entities</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="entities")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Entity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets represents the entities that were mentioned in the
            message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expiration">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; Expiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; Expiration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Expiration" />
      <MemberSignature Language="VB.NET" Value="Public Property Expiration As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.Expiration : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.Expiration" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Expiration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="expiration")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the time at which the activity should be considered to
            be "expired" and should not be presented to the recipient.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ChannelAccount From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.ChannelAccount From" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As ChannelAccount" />
      <MemberSignature Language="F#" Value="member this.From : Microsoft.Bot.Schema.ChannelAccount with get, set" Usage="Microsoft.Bot.Schema.Activity.From" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.From</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="from")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ChannelAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets identifies the sender of the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelData&lt;TypeT&gt;">
      <MemberSignature Language="C#" Value="public TypeT GetChannelData&lt;TypeT&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TypeT GetChannelData&lt;TypeT&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.GetChannelData``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelData(Of TypeT) () As TypeT" />
      <MemberSignature Language="F#" Value="abstract member GetChannelData : unit -&gt; 'ypeT&#xA;override this.GetChannelData : unit -&gt; 'ypeT" Usage="activity.GetChannelData " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.GetChannelData``1</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TypeT</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TypeT" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TypeT">The type of the object to return.</typeparam>
        <summary>
            Gets the channel data as a strongly-typed object.
            </summary>
        <returns>The strongly-typed object; or the type's default value, if the <see cref="P:Microsoft.Bot.Schema.Activity.ChannelData" /> is null.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Bot.Schema.Activity.ChannelData" />
        <altmember cref="M:Microsoft.Bot.Schema.Activity.TryGetChannelData``1(``0@)" />
      </Docs>
    </Member>
    <Member MemberName="GetConversationReference">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ConversationReference GetConversationReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.ConversationReference GetConversationReference() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.GetConversationReference" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConversationReference () As ConversationReference" />
      <MemberSignature Language="F#" Value="abstract member GetConversationReference : unit -&gt; Microsoft.Bot.Schema.ConversationReference&#xA;override this.GetConversationReference : unit -&gt; Microsoft.Bot.Schema.ConversationReference" Usage="activity.GetConversationReference " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.GetConversationReference</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ConversationReference</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a conversation reference from an activity.
            </summary>
        <returns>A conversation reference for the conversation that contains the activity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="GetMentions">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.Mention[] GetMentions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Schema.Mention[] GetMentions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.GetMentions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMentions () As Mention()" />
      <MemberSignature Language="F#" Value="abstract member GetMentions : unit -&gt; Microsoft.Bot.Schema.Mention[]&#xA;override this.GetMentions : unit -&gt; Microsoft.Bot.Schema.Mention[]" Usage="activity.GetMentions " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IMessageActivity.GetMentions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.Mention[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resolves the mentions from the entities of this (message) activity.
            </summary>
        <returns>The array of mentions; or an empty array, if none are found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyConversationReference">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ConversationReference GetReplyConversationReference (Microsoft.Bot.Schema.ResourceResponse reply);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Schema.ConversationReference GetReplyConversationReference(class Microsoft.Bot.Schema.ResourceResponse reply) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.GetReplyConversationReference(Microsoft.Bot.Schema.ResourceResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReplyConversationReference (reply As ResourceResponse) As ConversationReference" />
      <MemberSignature Language="F#" Value="member this.GetReplyConversationReference : Microsoft.Bot.Schema.ResourceResponse -&gt; Microsoft.Bot.Schema.ConversationReference" Usage="activity.GetReplyConversationReference reply" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ConversationReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reply" Type="Microsoft.Bot.Schema.ResourceResponse" />
      </Parameters>
      <Docs>
        <param name="reply">ResourceResponse returned from sendActivity</param>
        <summary>
            Create a ConversationReference based on this Activity's Conversation info and the ResourceResponse from sending an activity.
            </summary>
        <returns>A ConversationReference that can be stored and used later to delete or update the activity.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException" />
      </Docs>
    </Member>
    <Member MemberName="HasContent">
      <MemberSignature Language="C#" Value="public bool HasContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.HasContent" />
      <MemberSignature Language="VB.NET" Value="Public Function HasContent () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasContent : unit -&gt; bool&#xA;override this.HasContent : unit -&gt; bool" Usage="activity.HasContent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IMessageActivity.HasContent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks whether this message activity has content.
            </summary>
        <returns>True, if this message activity has any content to send; otherwise, false.</returns>
        <remarks>This method is defined on the <see cref="T:Microsoft.Bot.Schema.Activity" /> class, but is only intended
            for use on an activity of <see cref="P:Microsoft.Bot.Schema.Activity.Type" /><see cref="F:Microsoft.Bot.Schema.ActivityTypes.Message" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoryDisclosed">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; HistoryDisclosed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; HistoryDisclosed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.HistoryDisclosed" />
      <MemberSignature Language="VB.NET" Value="Public Property HistoryDisclosed As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.HistoryDisclosed : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.HistoryDisclosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IConversationUpdateActivity.HistoryDisclosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="historyDisclosed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates whether the prior history of the channel is
            disclosed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="id")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains an ID that uniquely identifies the activity
            on the channel.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Importance">
      <MemberSignature Language="C#" Value="public string Importance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Importance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Importance" />
      <MemberSignature Language="VB.NET" Value="Public Property Importance As String" />
      <MemberSignature Language="F#" Value="member this.Importance : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Importance" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Importance</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="importance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the importance of the activity. Possible values
            include: 'low', 'normal', 'high'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHint">
      <MemberSignature Language="C#" Value="public string InputHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputHint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.InputHint" />
      <MemberSignature Language="VB.NET" Value="Public Property InputHint As String" />
      <MemberSignature Language="F#" Value="member this.InputHint : string with get, set" Usage="Microsoft.Bot.Schema.Activity.InputHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.InputHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="inputHint")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets indicates whether your bot is accepting,
            expecting, or ignoring user input after the message is delivered to
            the client. Possible values include: 'acceptingInput',
            'ignoringInput', 'expectingInput'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActivity">
      <MemberSignature Language="C#" Value="protected bool IsActivity (string activityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsActivity(string activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.IsActivity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsActivity (activityType As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsActivity : string -&gt; bool" Usage="activity.IsActivity activityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activityType">The activity type to check for.</param>
        <summary>
            Indicates whether this activity is of a specified activity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Label" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.ITraceActivity.Label</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a descriptive label for the activity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenFor">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; ListenFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; ListenFor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ListenFor" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenFor As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.ListenFor : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.ListenFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="listenFor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets list of phrases and references that speech and
            language priming systems should listen for
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public string Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Locale" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As String" />
      <MemberSignature Language="F#" Value="member this.Locale : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Locale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Locale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="locale")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a locale name for the contents of the text field.
            The locale name is a combination of an ISO 639 two- or three-letter
            culture code associated with a language
            and an ISO 3166 two-letter subculture code associated with a
            country or region.
            The locale name can also correspond to a valid BCP-47 language tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalTimestamp">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; LocalTimestamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; LocalTimestamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.LocalTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalTimestamp As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.LocalTimestamp : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.LocalTimestamp" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.LocalTimestamp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="localTimestamp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the date and time that the message was sent,
            in local time, expressed in ISO-8601 format.
            For example, 2016-09-23T13:07:49.4714686-07:00.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalTimezone">
      <MemberSignature Language="C#" Value="public string LocalTimezone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalTimezone" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.LocalTimezone" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalTimezone As String" />
      <MemberSignature Language="F#" Value="member this.LocalTimezone : string with get, set" Usage="Microsoft.Bot.Schema.Activity.LocalTimezone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="localTimezone")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the name of the timezone in which the
            message, in local time, expressed in IANA Time Zone database
            format.
            For example, America/Los_Angeles.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MembersAdded">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; MembersAdded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; MembersAdded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.MembersAdded" />
      <MemberSignature Language="VB.NET" Value="Public Property MembersAdded As IList(Of ChannelAccount)" />
      <MemberSignature Language="F#" Value="member this.MembersAdded : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.MembersAdded" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IConversationUpdateActivity.MembersAdded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="membersAdded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of members added to the conversation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MembersRemoved">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; MembersRemoved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; MembersRemoved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.MembersRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Property MembersRemoved As IList(Of ChannelAccount)" />
      <MemberSignature Language="F#" Value="member this.MembersRemoved : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.MembersRemoved" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IConversationUpdateActivity.MembersRemoved</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="membersRemoved")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of members removed from the
            conversation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IEventActivity.Name</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IInvokeActivity.Name</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.ITraceActivity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the operation associated with an invoke or
            event activity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JObject Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.Linq.JObject Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Property Properties As JObject" />
      <MemberSignature Language="F#" Value="member this.Properties : Newtonsoft.Json.Linq.JObject with get, set" Usage="Microsoft.Bot.Schema.Activity.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonExtensionData(ReadData=true, WriteData=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets properties that are not otherwise defined by the <see cref="T:Microsoft.Bot.Schema.Activity" /> type but that
            might appear in the REST JSON object.
            </summary>
        <value>The extended properties for the object.</value>
        <remarks>With this, properties not represented in the defined type are not dropped when
            the JSON object is deserialized, but are instead stored in this property. Such properties
            will be written to a JSON object when the instance is serialized.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReactionsAdded">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; ReactionsAdded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; ReactionsAdded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ReactionsAdded" />
      <MemberSignature Language="VB.NET" Value="Public Property ReactionsAdded As IList(Of MessageReaction)" />
      <MemberSignature Language="F#" Value="member this.ReactionsAdded : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.ReactionsAdded" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageReactionActivity.ReactionsAdded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="reactionsAdded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of reactions added to the conversation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReactionsRemoved">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; ReactionsRemoved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; ReactionsRemoved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ReactionsRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Property ReactionsRemoved As IList(Of MessageReaction)" />
      <MemberSignature Language="F#" Value="member this.ReactionsRemoved : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.ReactionsRemoved" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageReactionActivity.ReactionsRemoved</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="reactionsRemoved")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of reactions removed from the
            conversation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ChannelAccount Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.ChannelAccount Recipient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As ChannelAccount" />
      <MemberSignature Language="F#" Value="member this.Recipient : Microsoft.Bot.Schema.ChannelAccount with get, set" Usage="Microsoft.Bot.Schema.Activity.Recipient" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Recipient</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="recipient")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ChannelAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets identifies the recipient of the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelatesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.ConversationReference RelatesTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.ConversationReference RelatesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.RelatesTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatesTo As ConversationReference" />
      <MemberSignature Language="F#" Value="member this.RelatesTo : Microsoft.Bot.Schema.ConversationReference with get, set" Usage="Microsoft.Bot.Schema.Activity.RelatesTo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IEventActivity.RelatesTo</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IInvokeActivity.RelatesTo</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.ITraceActivity.RelatesTo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="relatesTo")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.ConversationReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a reference to another conversation or activity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToId">
      <MemberSignature Language="C#" Value="public string ReplyToId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ReplyToId" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyToId As String" />
      <MemberSignature Language="F#" Value="member this.ReplyToId : string with get, set" Usage="Microsoft.Bot.Schema.Activity.ReplyToId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.ReplyToId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="replyToId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the ID of the message to which this message
            is a reply.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticAction">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.SemanticAction SemanticAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.SemanticAction SemanticAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.SemanticAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SemanticAction As SemanticAction" />
      <MemberSignature Language="F#" Value="member this.SemanticAction : Microsoft.Bot.Schema.SemanticAction with get, set" Usage="Microsoft.Bot.Schema.Activity.SemanticAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="semanticAction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.SemanticAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an optional programmatic action accompanying this
            request
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceUrl">
      <MemberSignature Language="C#" Value="public string ServiceUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ServiceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUrl As String" />
      <MemberSignature Language="F#" Value="member this.ServiceUrl : string with get, set" Usage="Microsoft.Bot.Schema.Activity.ServiceUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.ServiceUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="serviceUrl")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the URL that specifies the channel's service
            endpoint. Set by the channel.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public string Speak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Speak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Speak" />
      <MemberSignature Language="VB.NET" Value="Public Property Speak As String" />
      <MemberSignature Language="F#" Value="member this.Speak : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Speak" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Speak</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="speak")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the text to speak.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuggestedActions">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Schema.SuggestedActions SuggestedActions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Schema.SuggestedActions SuggestedActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.SuggestedActions" />
      <MemberSignature Language="VB.NET" Value="Public Property SuggestedActions As SuggestedActions" />
      <MemberSignature Language="F#" Value="member this.SuggestedActions : Microsoft.Bot.Schema.SuggestedActions with get, set" Usage="Microsoft.Bot.Schema.Activity.SuggestedActions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.SuggestedActions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="suggestedActions")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Schema.SuggestedActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the suggested actions for the activity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public string Summary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Property Summary As String" />
      <MemberSignature Language="F#" Value="member this.Summary : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Summary" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Summary</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="summary")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the text to display if the channel cannot render
            cards.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Text</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IEndOfConversationActivity.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="text")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the text content of the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFormat">
      <MemberSignature Language="C#" Value="public string TextFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.TextFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFormat As String" />
      <MemberSignature Language="F#" Value="member this.TextFormat : string with get, set" Usage="Microsoft.Bot.Schema.Activity.TextFormat" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.TextFormat</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="textFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets format of text fields Default:markdown. Possible
            values include: 'markdown', 'plain', 'xml'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextHighlights">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt; TextHighlights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.TextHighlight&gt; TextHighlights" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.TextHighlights" />
      <MemberSignature Language="VB.NET" Value="Public Property TextHighlights As IList(Of TextHighlight)" />
      <MemberSignature Language="F#" Value="member this.TextHighlights : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.TextHighlights" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.ISuggestionActivity.TextHighlights</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="textHighlights")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.TextHighlight&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the collection of text fragments to highlight when the
            activity contains a ReplyToId value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; Timestamp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; Timestamp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Property Timestamp As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.Timestamp : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.Bot.Schema.Activity.Timestamp" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Timestamp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="timestamp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the date and time that the message was sent,
            in UTC, expressed in ISO-8601 format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopicName">
      <MemberSignature Language="C#" Value="public string TopicName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TopicName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.TopicName" />
      <MemberSignature Language="VB.NET" Value="Public Property TopicName As String" />
      <MemberSignature Language="F#" Value="member this.TopicName : string with get, set" Usage="Microsoft.Bot.Schema.Activity.TopicName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IConversationUpdateActivity.TopicName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="topicName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the updated topic name of the conversation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetChannelData&lt;TypeT&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetChannelData&lt;TypeT&gt; (out TypeT instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetChannelData&lt;TypeT&gt;([out] !!TypeT&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Schema.Activity.TryGetChannelData``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetChannelData(Of TypeT) (ByRef instance As TypeT) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetChannelData :  -&gt; bool&#xA;override this.TryGetChannelData :  -&gt; bool" Usage="activity.TryGetChannelData instance" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Schema.IActivity.TryGetChannelData``1(``0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TypeT" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="TypeT" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TypeT">The type of the object to return.</typeparam>
        <param name="instance">When this method returns, contains the strongly-typed object if the operation succeeded,
            or the type's default value if the operation failed.</param>
        <summary>
            Gets the channel data as a strongly-typed object.. A return value idicates whether the operation succeeded.
            </summary>
        <returns>
          <c>true</c> if the operation succeeded; otherwise, <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.Bot.Schema.Activity.ChannelData" />
        <altmember cref="M:Microsoft.Bot.Schema.Activity.GetChannelData``1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="Microsoft.Bot.Schema.Activity.Type" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IActivity.Type</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets contains the activity type. Possible values include:
            'message', 'contactRelationUpdate', 'conversationUpdate', 'typing',
            'endOfConversation', 'event', 'invoke', 'deleteUserData',
            'messageUpdate', 'messageDelete', 'installationUpdate',
            'messageReaction', 'suggestion', 'trace', 'handoff'
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="Microsoft.Bot.Schema.Activity.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.IMessageActivity.Value</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IEventActivity.Value</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.IInvokeActivity.Value</InterfaceMember>
        <InterfaceMember>P:Microsoft.Bot.Schema.ITraceActivity.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="value")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that is associated with the activity.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public string ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Schema.Activity.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueType As String" />
      <MemberSignature Language="F#" Value="member this.ValueType : string with get, set" Usage="Microsoft.Bot.Schema.Activity.ValueType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Bot.Schema.ITraceActivity.ValueType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Schema</AssemblyName>
        <AssemblyVersion>4.0.7.0</AssemblyVersion>
        <AssemblyVersion>4.1.5.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty(PropertyName="valueType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the type of the activity's value object.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>