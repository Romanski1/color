<Type Name="IBotFrameworkHttpAdapter" FullName="Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter">
  <TypeSignature Language="C#" Value="public interface IBotFrameworkHttpAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBotFrameworkHttpAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBotFrameworkHttpAdapter" />
  <TypeSignature Language="F#" Value="type IBotFrameworkHttpAdapter = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface to express the relationship between an mvc api Controller and a Bot Builder Adapter.
            This interface can be used for Dependency Injection.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ProcessAsync (Microsoft.AspNetCore.Http.HttpRequest httpRequest, Microsoft.AspNetCore.Http.HttpResponse httpResponse, Microsoft.Bot.Builder.IBot bot, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessAsync(class Microsoft.AspNetCore.Http.HttpRequest httpRequest, class Microsoft.AspNetCore.Http.HttpResponse httpResponse, class Microsoft.Bot.Builder.IBot bot, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Integration.AspNet.Core.IBotFrameworkHttpAdapter.ProcessAsync(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.HttpResponse,Microsoft.Bot.Builder.IBot,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : Microsoft.AspNetCore.Http.HttpRequest * Microsoft.AspNetCore.Http.HttpResponse * Microsoft.Bot.Builder.IBot * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iBotFrameworkHttpAdapter.ProcessAsync (httpRequest, httpResponse, bot, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder.Integration.AspNet.Core</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpRequest" Type="Microsoft.AspNetCore.Http.HttpRequest" />
        <Parameter Name="httpResponse" Type="Microsoft.AspNetCore.Http.HttpResponse" />
        <Parameter Name="bot" Type="Microsoft.Bot.Builder.IBot" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="httpRequest">The HTTP request object, typically in a POST handler by a Controller.</param>
        <param name="httpResponse">The HTTP response object.</param>
        <param name="bot">The bot implementation.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            This method can be called from inside a POST method on any Controller implementation.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>