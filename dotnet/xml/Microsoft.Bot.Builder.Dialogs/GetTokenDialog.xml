<Type Name="GetTokenDialog" FullName="Microsoft.Bot.Builder.Dialogs.GetTokenDialog">
  <TypeSignature Language="C#" Value="public class GetTokenDialog : Microsoft.Bot.Builder.Dialogs.IDialog&lt;Microsoft.Bot.Builder.Dialogs.GetTokenResponse&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GetTokenDialog extends System.Object implements class Microsoft.Bot.Builder.Dialogs.IDialog`1&lt;class Microsoft.Bot.Builder.Dialogs.GetTokenResponse&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Dialogs.GetTokenDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class GetTokenDialog&#xA;Implements IDialog(Of GetTokenResponse)" />
  <TypeSignature Language="F#" Value="type GetTokenDialog = class&#xA;    interface IDialog&lt;GetTokenResponse&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>3.16.1.38846</AssemblyVersion>
    <AssemblyVersion>3.19.1.44133</AssemblyVersion>
    <AssemblyVersion>3.20.1.42</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.Dialogs.IDialog&lt;Microsoft.Bot.Builder.Dialogs.GetTokenResponse&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A Dialog to rerieve a user token for a configured OAuth connection
            This Dialog will first attempt to rerieve the user token from the Azure Bot Service
            If the Azure Bot Service does not already have a token, the GetTokenDialog will send
            the user an OAuthCard.
            The GetTokenDialog will then wait for either the user to come back, or for the user to send
            a validation code. The Dialog will attempt to exchange whatever response is sent for the 
            user token. If successful, the dialog will return the token and otherwise will retry the
            specified number of times.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GetTokenDialog (string connectionName, string signInMessage, string buttonLabel, int retries = 0, string retryMessage = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionName, string signInMessage, string buttonLabel, int32 retries, string retryMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.GetTokenDialog.#ctor(System.String,System.String,System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionName As String, signInMessage As String, buttonLabel As String, Optional retries As Integer = 0, Optional retryMessage As String = null)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.Dialogs.GetTokenDialog : string * string * string * int * string -&gt; Microsoft.Bot.Builder.Dialogs.GetTokenDialog" Usage="new Microsoft.Bot.Builder.Dialogs.GetTokenDialog (connectionName, signInMessage, buttonLabel, retries, retryMessage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="signInMessage" Type="System.String" />
        <Parameter Name="buttonLabel" Type="System.String" />
        <Parameter Name="retries" Type="System.Int32" />
        <Parameter Name="retryMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionName">To be added.</param>
        <param name="signInMessage">To be added.</param>
        <param name="buttonLabel">To be added.</param>
        <param name="retries">To be added.</param>
        <param name="retryMessage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (Microsoft.Bot.Builder.Dialogs.IDialogContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task StartAsync(class Microsoft.Bot.Builder.Dialogs.IDialogContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Dialogs.GetTokenDialog.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync (context As IDialogContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member StartAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext -&gt; System.Threading.Tasks.Task&#xA;override this.StartAsync : Microsoft.Bot.Builder.Dialogs.IDialogContext -&gt; System.Threading.Tasks.Task" Usage="getTokenDialog.StartAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.Dialogs.IDialog`1.StartAsync(Microsoft.Bot.Builder.Dialogs.IDialogContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>3.16.1.38846</AssemblyVersion>
        <AssemblyVersion>3.19.1.44133</AssemblyVersion>
        <AssemblyVersion>3.20.1.42</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.Dialogs.IDialogContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>