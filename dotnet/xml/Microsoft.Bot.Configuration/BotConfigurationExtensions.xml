<Type Name="BotConfigurationExtensions" FullName="Microsoft.Bot.Configuration.BotConfigurationExtensions">
  <TypeSignature Language="C#" Value="public static class BotConfigurationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BotConfigurationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Configuration.BotConfigurationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module BotConfigurationExtensions" />
  <TypeSignature Language="F#" Value="type BotConfigurationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Configuration</AssemblyName>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsProjectNameSpaceless">
      <MemberSignature Language="C#" Value="public static bool IsProjectNameSpaceless (this Microsoft.Bot.Configuration.BotConfiguration botConfiguration, string folder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsProjectNameSpaceless(class Microsoft.Bot.Configuration.BotConfiguration botConfiguration, string folder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Configuration.BotConfigurationExtensions.IsProjectNameSpaceless(Microsoft.Bot.Configuration.BotConfiguration,System.String)" />
      <MemberSignature Language="F#" Value="static member IsProjectNameSpaceless : Microsoft.Bot.Configuration.BotConfiguration * string -&gt; bool" Usage="Microsoft.Bot.Configuration.BotConfigurationExtensions.IsProjectNameSpaceless (botConfiguration, folder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Configuration</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botConfiguration" Type="Microsoft.Bot.Configuration.BotConfiguration" RefType="this" />
        <Parameter Name="folder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="botConfiguration">BotConfiguration object to extend.</param>
        <param name="folder">Folder's path to validate.</param>
        <summary>
            Check if the Project's Name contains white spaces.
            </summary>
        <returns>Boolean that indicates if a Project's Name is spaceless.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"> Thrown when no '.scproj' file is found or when there are two or more 'csproj' files.</exception>
        <exception cref="T:System.ArgumentNullException"> Thrown when param 'folder' is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateLuisKeyExistence">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;bool,string&gt; ValidateLuisKeyExistence (this Microsoft.Bot.Configuration.BotConfiguration botConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;bool, string&gt; ValidateLuisKeyExistence(class Microsoft.Bot.Configuration.BotConfiguration botConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Configuration.BotConfigurationExtensions.ValidateLuisKeyExistence(Microsoft.Bot.Configuration.BotConfiguration)" />
      <MemberSignature Language="F#" Value="static member ValidateLuisKeyExistence : Microsoft.Bot.Configuration.BotConfiguration -&gt; ValueTuple&lt;bool, string&gt;" Usage="Microsoft.Bot.Configuration.BotConfigurationExtensions.ValidateLuisKeyExistence botConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Configuration</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Boolean,System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "IsValid", "ErrMsg" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botConfiguration" Type="Microsoft.Bot.Configuration.BotConfiguration" RefType="this" />
      </Parameters>
      <Docs>
        <param name="botConfiguration">BotConfiguration object to extend.</param>
        <summary>
            Checks if the <see cref="T:Microsoft.Bot.Configuration.LuisService" /> has its key defined.
            </summary>
        <returns>Tuple with a boolean that indicates if a bot configuration file's Luis keys are present and its Error message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateQnAKeyExistence">
      <MemberSignature Language="C#" Value="public static ValueTuple&lt;bool,string&gt; ValidateQnAKeyExistence (this Microsoft.Bot.Configuration.BotConfiguration botConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;bool, string&gt; ValidateQnAKeyExistence(class Microsoft.Bot.Configuration.BotConfiguration botConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Configuration.BotConfigurationExtensions.ValidateQnAKeyExistence(Microsoft.Bot.Configuration.BotConfiguration)" />
      <MemberSignature Language="F#" Value="static member ValidateQnAKeyExistence : Microsoft.Bot.Configuration.BotConfiguration -&gt; ValueTuple&lt;bool, string&gt;" Usage="Microsoft.Bot.Configuration.BotConfigurationExtensions.ValidateQnAKeyExistence botConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Configuration</AssemblyName>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Boolean,System.String&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="botbuilder-dotnet-stable">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "IsValid", "ErrMsg" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botConfiguration" Type="Microsoft.Bot.Configuration.BotConfiguration" RefType="this" />
      </Parameters>
      <Docs>
        <param name="botConfiguration">BotConfiguration object to extend.</param>
        <summary>
            Checks if the <see cref="T:Microsoft.Bot.Configuration.QnAMakerService" /> has its key defined.
            </summary>
        <returns>Boolean that indicates if a bot configuration file's QnAMaker keys are present.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>